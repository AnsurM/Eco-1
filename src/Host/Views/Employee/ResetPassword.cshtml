@model Host.Models.AccountViewModels.ResetPasswordViewModel
@{
    Layout = "_LayoutSign";
    ViewData["Title"] = "ResetPassword";
}

<h2>ResetPassword</h2>
<div class="limiter">
    <div class="container-login100">

        <div class="wrap-login100">
            <section class="main-contents">
                <div class="row">
                    <div class="col-sm-5">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <h3 class="panel-title">Register</h3>
                                <div class="panel-controls">
                                </div>
                            </div>
                            <form class="panel-body" asp-controller="Account" asp-action="ResetPassword"  method="post">

                                @Html.AntiForgeryToken()
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Email</label>
                                            @Html.TextBoxFor(p => p.Email, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Password</label>
                                            @Html.PasswordFor(p => p.Password, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        <div class="form-group">
                                            <label>Confirm Password</label>
                                            <input type="password" name="ConfirmPassword" id="ConfirmPassword" class="form-control" />
                                        </div>
                                    </div>
                                </div>
                                <div class="label-danger"></div>
                                <button class="btn btn-primary" type="submit">Submit</button>
                            </form>
                        </div>
                    </div>
                </div>
            </section>
        </div>
    </div>
    </div>


    <script>
    const CheckPasswordStrength = (password) => {
        //Regular Expressions.
        const regex = [];
        regex.push("[A-Z]"); //Uppercase Alphabet.
        regex.push("[a-z]"); //Lowercase Alphabet.
        regex.push("[0-9]"); //Digit.
        regex.push("[$@Html.Raw("@")$!%*#?&]"); //Special Character.

        var passed = 0;

        //Validate for each Regular Expression.
        for (let i = 0; i < regex.length; i++) {
            if (new RegExp(regex[i]).test(password)) {
                passed++;
            }
        }

        //Validate for length of Password.
        if (passed > 2 && password.length > 5) {
            passed++;
        }

        //Display status.
        var color = "";
        var strength = "";
        switch (passed) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
            return false;
        case 5:
            return true;
        default:
            return false;
        }

    };
        $.fn.form.settings.rules.myCustomRule = function (param) {
            // Your validation condition goes here
            if (CheckPasswordStrength(param)) {
                return true;
            }
            else {
                return false;

            }
        }
        $('form')
            .form({
                on: 'blur',
                fields: {
                    match: {
                        identifier: 'Password',
                        rules: [
                            {
                                type: 'match[ConfirmPassword]',
                                prompt: 'Password Should Match'
                            }, {
                                type: 'myCustomRule[param]',
                                prompt: 'Please ensure password has one lower case letter, one upper case letter, one Special Character, 6-13 length, and no spaces'
                            }
                        ]
                    }
                }
            });

    </script>

